/*
 * Copyright (C) 2020 tonikelope
 _              _ _        _                  
| |_ ___  _ __ (_) | _____| | ___  _ __   ___ 
| __/ _ \| '_ \| | |/ / _ \ |/ _ \| '_ \ / _ \
| || (_) | | | | |   <  __/ | (_) | |_) |  __/
 \__\___/|_| |_|_|_|\_\___|_|\___/| .__/ \___|
 ____    ___  ____    ___  
|___ \  / _ \|___ \  / _ \ 
  __) || | | | __) || | | |
 / __/ | |_| |/ __/ | |_| |
|_____| \___/|_____| \___/ 

https://github.com/tonikelope/coronapoker
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.tonikelope.coronapoker;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import javax.swing.Timer;

/**
 *
 * @author tonikelope
 */
public class VolumeControlDialog extends CoronaDialog {

    public static final int TIMEOUT = 1000;
    private volatile Timer timer = null;

    /**
     * Creates new form VolumeControl
     */
    public VolumeControlDialog(java.awt.Dialog parent, boolean modal, int width) {
        super(parent, modal);
        initComponents();

        setPreferredSize(new Dimension(width, this.getHeight()));

        Helpers.updateFonts(this, Helpers.GUI_FONT, null);

        pack();

        timer = new Timer(TIMEOUT, (ActionEvent ae) -> {
            timer.stop();
            dispose();
            Init.VOLUME_DIALOG = null;
        });

        timer.setRepeats(false);
        timer.setCoalesce(false);
    }

    /**
     * Creates new form VolumeControl
     */
    public VolumeControlDialog(java.awt.Frame parent, boolean modal, int width) {
        super(parent, modal);
        initComponents();

        setPreferredSize(new Dimension(width, this.getHeight()));

        Helpers.updateFonts(this, Helpers.GUI_FONT, null);

        pack();

        timer = new Timer(TIMEOUT, (ActionEvent ae) -> {
            timer.stop();
            dispose();
            Init.VOLUME_DIALOG = null;
        });

        timer.setRepeats(false);
        timer.setCoalesce(false);
    }

    public void refresh() {

        Helpers.GUIRun(() -> {
            if (timer.isRunning()) {
                timer.restart();
            } else {
                timer.start();
            }

            barra.setValue(Math.round(Audio.MASTER_VOLUME * 100));

            sound_icon.setBackground(barra.getValue() > 0 ? Color.WHITE : Color.RED);
            panel.setBackground(barra.getValue() > 0 ? Color.WHITE : Color.RED);

            if (!isVisible()) {
                setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        sound_icon = new javax.swing.JLabel();
        barra = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setFocusCycleRoot(false);
        setFocusable(false);
        setFocusableWindowState(false);
        setUndecorated(true);

        panel.setBackground(new java.awt.Color(255, 255, 255));

        sound_icon.setBackground(new java.awt.Color(255, 255, 255));
        sound_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/volumen.png"))); // NOI18N
        sound_icon.setDoubleBuffered(true);
        sound_icon.setFocusable(false);
        sound_icon.setOpaque(true);

        barra.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        barra.setDoubleBuffered(true);
        barra.setFocusable(false);
        barra.setStringPainted(true);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sound_icon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sound_icon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(barra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barra;
    private javax.swing.JPanel panel;
    private javax.swing.JLabel sound_icon;
    // End of variables declaration//GEN-END:variables
}
